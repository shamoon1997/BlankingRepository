import React, { useRef, useState } from "react";
import uPlot from "uplot";
import UplotReact from "uplot-react";
import "uplot/dist/uPlot.min.css";
import { clickZoomPlugin, customPlugin, tooltipPlugin } from "./plotPlugins";

// const data: uPlot.AlignedData = [
//   [1546300800, 1546387200, 1556387300, 1566397400, 1576387500], // x-values (timestamps)
//   [35, 71, 100, 0, 115], // y-values (series 1)
//   [90, 15, 100, 115, 120], // y-values (series 2)
// ];

const data: uPlot.AlignedData = [
  [
    10426567,
    10426872,
    10427175,
    10427479,
    10427783,
    10428086,
    10428390,
    10428694,
    10428998,
    10429301,
    10429605,
    10429909,
    10430217,
    10430521,
    10430824,
    10431128,
    10431432,
    10431736,
    10432039,
    10432343,
    10432647,
    10432950,
    10433255,
    10433558,
    10433866,
    10434170,
    10434473,
    10434777,
    10435081,
    10435385,
    10435688,
    10435993,
    10436296,
    10436599,
    10436904,
    10437207,
    10437515,
    10437819,
    10438123,
    10438426,
    10438730,
    10439034,
    10439337,
    10439642,
    10439945,
    10440248,
    10440553,
    10440856,
    10441164,
    10441468,
    10441772,
    10442075,
    10442380,
    10442683,
    10442986,
    10443291,
    10443594,
    10443898,
    10444202,
    10444505,
    10444813,
    10445117,
    10445421,
    10445724,
    10446029,
    10446332,
    10446636,
    10446940,
    10447243,
    10447547,
    10447851,
    10448155,
    10448462,
    10448767,
    10449070,
    10449374,
    10449678,
    10449982,
    10450285,
    10450589,
    10450893,
    10451196,
    10451501,
    10451804,
    10452112,
    10452416,
    10452720,
    10453023,
    10453328,
    10453631,
    10453934,
    10454239,
    10454542,
    10454846,
    10455150,
    10455453,
    10455761,
    10456065,
    10456369,
    10456672,
    10456977,
    10457280,
    10457583,
    10457888,
    10458191,
    10458495,
    10458799,
    10459102,
    10459410,
    10459714,
    10460018,
    10460321,
    10460626,
    10460929,
    10461233,
    10461537,
    10461840,
    10462144,
    10462448,
    10462752,
    10463059,
    10463364,
    10463667,
    10463970,
    10464275,
    10464578,
    10464882,
    10465186,
    10465490,
    10465793,
    10466098,
    10466401,
    10466708,
    10467013,
    10467316,
    10467620,
    10467924,
    10468228,
    10468532,
    10468836,
    null,
    10469563,
    10469867,
    10470171,
    10470479,
    10470782,
    10471087,
    10471390,
    10471693,
    10471998,
    10472301,
    10472605,
    10472909,
    10473213,
    10473516,
    10473820,
    10474128,
    10474431,
    10474736,
    10475039,
    10475343,
    10475647,
    10475951,
    10476254,
    10476558,
  ],
  [
    74,
    74,
    72,
    80,
    68,
    74,
    94,
    80,
    77,
    78,
    77,
    69,
    63,
    67,
    77,
    72,
    76,
    82,
    78,
    76,
    66,
    61,
    67,
    90,
    73,
    97,
    106,
    110,
    107,
    113,
    112,
    104,
    95,
    87,
    87,
    79,
    79,
    72,
    75,
    86,
    109,
    99,
    97,
    160,
    88,
    110,
    163,
    138,
    90,
    80,
    101,
    148,
    163,
    157,
    103,
    101,
    136,
    102,
    97,
    105,
    202,
    107,
    118,
    119,
    103,
    112,
    113,
    114,
    190,
    109,
    236,
    114,
    182,
    110,
    93,
    107,
    95,
    96,
    114,
    81,
    111,
    127,
    101,
    156,
    81,
    94,
    79,
    76,
    171,
    71,
    62,
    251,
    113,
    80,
    74,
    106,
    252,
    135,
    158,
    87,
    104,
    313,
    100,
    312,
    88,
    76,
    80,
    114,
    72,
    73,
    134,
    155,
    87,
    202,
    110,
    66,
    84,
    205,
    70,
    181,
    69,
    134,
    70,
    101,
    82,
    91,
    72,
    78,
    132,
    73,
    79,
    75,
    79,
    76,
    70,
    61,
    188,
    72,
    73,
    239,
    null,
    122,
    257,
    75,
    181,
    69,
    112,
    68,
    199,
    74,
    91,
    120,
    103,
    104,
    159,
    109,
    237,
    120,
    118,
    143,
    115,
    105,
    110,
    202,
    127,
  ],
];

const o = document.createElement("div");
o.id = "chart-container";
document.body.appendChild(o);

const BlobDataPlot: React.FC = () => {
  const parentDivRef = useRef<HTMLDivElement>(null);
  const [options] = useState<uPlot.Options>({
    width: 493,
    height: 300,
    series: [
      {},
      { label: "1", width: 3, stroke: "#7cb5ec" },
      //   { label: "2", width: 3, stroke: "#434348" },
    ],
    legend: { show: false },
    focus: { alpha: 0.3 },
    // scales: { y: { auto: true }, x: { auto: true } },
    cursor: {
      drag: { x: false, y: false },
      focus: { prox: 5 },
      bind: { dblclick: () => null },
    },
    plugins: [clickZoomPlugin(), customPlugin(), tooltipPlugin()],
    axes: [{}],
  });

  return (
    <div
      className="relative max-h-[320px] w-full"
      ref={parentDivRef}
      id="chart-container"
    >
      <UplotReact options={options} data={data} />
    </div>
  );
};

export default BlobDataPlot;

/* <img
        className="max-h-[320px] w-full bg-cover"
        src="/images/mock-metric-data-img.png"
        alt=""
      /> */
